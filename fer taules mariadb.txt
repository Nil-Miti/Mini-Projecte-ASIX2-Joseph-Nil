systemctl stop mariadb
mysqld_safe --skip-grant-tables --skip-networking &
MySQL -u root
texto simple usa mySQL;Actualice la contraseña del conjunto de usuarios = contraseña ("insertarpasswordherewherherhere") donde el usuario = 'root';donde 'insertarpasswordhere' es un verdadero privilegio de descarga de contraseñas;Salida

systemctl stop mariadb
systemctl start mariadb
(Otras distribuciones de Linux basadas en sistemas pueden tener comandos similares dependiendo de si ejecutan MySQL o MariaDB real; Otros sistemas de inicio serán diferentes)

Una vez que ejecute un comando a continuación e ingrese su contraseña, se le presentará un mensaje que le indique el programa realmente en ejecución (Mariadb) y se utiliza la base de datos:

mysql -u root -p 
MariaDB [(none)]>
Enumere sus bases de datos
Emitir las bases de datos del espectáculo; Comando, como se ve a continuación, para ver todas las bases de datos. A continuación se muestra un ejemplo:

MariaDB [(none)]> show databases;
+--------------------+
| Database |
+--------------------+
| information_schema |
| MySQL |
| performance_schema |
| tutorials |
+--------------------+
4 rows in set (0.00 sec)
Switch Database con el comando 'Uso':
MariaDB [(none)]> use tutorials;
Database changed
MariaDB [tutorials]>
El comando 'Mostrar' también se usa para enumerar las tablas en una base de datos:
MariaDB [mysql]> show tables;
+---------------------------+
| Tables_in_mysql |
+---------------------------+
| columns_priv |
| db |
| event |
| func |
| general_log |
| help_category |
Siempre realice una copia de seguridad antes de realizar CUALQUIER cambio
Utilizar mysqldump Para hacer una copia de seguridad de su base de datos antes de continuar con esta guía, se recomienda encarecidamente.

mysqldump database name > databasebackup.sql
Reemplace el nombre de la base de datos con su nombre de base de datos real y una copia de seguridad de la base de datos con el nombre del archivo que desea crear y terminarlo con .sql como el tipo de archivo para guardar su base de datos. Esto te permitirá restaurar bases de datos MySQL usando mysqldump desde este archivo de respaldo en cualquier momento.

Le recomendamos que ejecute este comando de un directorio que no se puede acceder públicamente para que su base de datos no se pueda descargar desde su cuenta sin iniciar sesión en la línea de comandos o FTP. Asegúrate de cambiar tu directorio a /raíz o /casa u otra ubicación en su sistema de archivos que requiera las credenciales adecuadas.

Ejemplo: restablecer la contraseña de administrador de WordPress
Consulte las instrucciones anteriores sobre cómo realizar una copia de seguridad de su base de datos antes de continuar.

Paso uno: Debe saber qué base de datos, nombre de usuario y contraseña está utilizando la instalación de WordPress. Están en wp-config.php en el directorio raíz de su instalación de WordPress como DB_NAME, DB_USER y DB_PASSWORD:

// ** MySQL settings ** //
/** The name of the database for WordPress */
define( 'DB_NAME', 'appdb' );
/** MySQL database username */
define( 'DB_USER', 'appdb_user' );
/** MySQL database password */
define( 'DB_PASSWORD', '...' );
Segundo paso: Con esta información, puede adaptar las instrucciones de Cómo restablecer la contraseña de administrador de WordPress y haz lo mismo desde la línea de comando:

mysql -u appdb_user -p
Enter password:
Welcome to the MariaDB monitor. Commands end with; or \g
.....

MariaDB [(ninguno)]>

Paso tres: Cambie a la base de datos de appdb:

MariaDB [(none)]> use appdb
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A
Base de datos cambiada

Paso cuatro: y mostrar las tablas:

MariaDB [appdb]> show tables;
+-----------------------+
| Tables_in_appdb    |
+-----------------------+
| wp_commentmeta  |
| wp_comments         |
| wp_links |
| wp_options |
| wp_postmeta |
| wp_posts |
| wp_term_relationships |
| wp_term_taxonomy |
| wp_termmeta |
| wp_terms |
| wp_usermeta |
| wp_users |
+-----------------------+
12 rows in set (0.00 sec)
MariaDB [appdb]>
Paso cinco: Luego, podemos seleccionar user_login y user_pass desde la tabla wp_users para ver qué fila estaremos actualizando:

MariaDB [appdb]> SELECT user_login,user_pass FROM wp_users;
+--------------+------------------------------------+
| user_login | user_pass |
+--------------+------------------------------------+
| hstwnd_admin | $P$BMCbERthYHPMJK.do2SUcxjAy567jo0 |
+--------------+------------------------------------+
1 row in set (0.00 sec)
Paso seis: Lo que nos permite establecer la nueva contraseña con

MariaDB [appdb]> UPDATE wp_users SET user_pass=MD5('newpassword') WHERE user_login = 'hstwnd_admin';
Query OK, 1 row affected (0.00 sec)
Rows matched: 1 Changed: 1 Warnings: 0
Paso siete: Y podemos ver el hash de la nueva contraseña con el mismo SELECT nuevamente

MariaDB [appdb]> SELECT user_login,user_pass FROM wp_users;
+--------------+----------------------------------+
| user_login | user_pass |
+--------------+----------------------------------+
| hstwnd_admin | 5e9d11a14ad1c8dd77e98ef9b53fd1ba |
+--------------+----------------------------------+
1 row in set (0.00 sec)
Para irnos, corremos 'salir'

MariaDB [appdb]> quit
Bye